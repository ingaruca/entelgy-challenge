plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.entelgy.challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.0.1'
    testImplementation 'com.squareup.okhttp3:okhttp:4.0.1'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {

    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                    'com/entelgy/challenge/EntelgyChallengeApplication.class',
                    'com/entelgy/challenge/config/*',
                    'com/entelgy/challenge/service/dto/*',
                    'com/entelgy/challenge/config/properties/*',
                    'com/entelgy/challenge/client/dto/*'
            ])
        })
    }


}
